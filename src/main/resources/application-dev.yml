app:
  base-url: http://localhost:8080

spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: ${POSTGRES_URL:jdbc:postgresql://localhost:5432/spotify_db}
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:default_password}
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show_sql: true
    hibernate:
      ddl-auto: none
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true
  data:
    redis:
      host: localhost
      port: 6379
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: openid, profile, email
            redirect-uri: http://localhost:8080/api/v1/auth/oauth2/google/callback
            authorization-grant-type: authorization_code
            client-name: Google
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v2/userinfo
            user-name-attribute: sub


cloudinary:
  cloudName: ${CLOUDINARY_CLOUD_NAME}
  apiKey: ${CLOUDINARY_API_KEY}
  apiSecret: ${CLOUDINARY_API_SECRET}

open:
  api:
    serverUrl: http://localhost:8080
    title: API Service for Development Environment
    version: v1.0.0
    serverName: server API for development in Spotify project
    description: This is the API documentation for the development environment of the Spotify project. It includes endpoints for managing Songs, Playlist, Library.

logging:
  level:
    org.hibernate.orm.jdbc.bind: trace

# Swagger (springdoc-openapi)
springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true